app:
  description: ''
  icon: 🤖
  icon_background: '#FFEAD5'
  mode: advanced-chat
  name: matplotlib
  use_icon_as_answer_icon: false
dependencies:
- current_identifier: null
  type: marketplace
  value:
    marketplace_plugin_unique_identifier: bowenliang123/base64_codec:0.4.0@886cc78123c7d3f32f2f836ae2926bd8a6a0a93cb21f72409f8ca01c9d0104bd
kind: app
version: 0.3.0
workflow:
  conversation_variables: []
  environment_variables: []
  features:
    file_upload:
      allowed_file_extensions:
      - .JPG
      - .JPEG
      - .PNG
      - .GIF
      - .WEBP
      - .SVG
      allowed_file_types:
      - image
      allowed_file_upload_methods:
      - local_file
      - remote_url
      enabled: false
      fileUploadConfig:
        audio_file_size_limit: 50
        batch_count_limit: 5
        file_size_limit: 15
        image_file_size_limit: 10
        video_file_size_limit: 100
        workflow_file_upload_limit: 10
      image:
        enabled: false
        number_limits: 3
        transfer_methods:
        - local_file
        - remote_url
      number_limits: 3
    opening_statement: ''
    retriever_resource:
      enabled: true
    sensitive_word_avoidance:
      enabled: false
    speech_to_text:
      enabled: false
    suggested_questions: []
    suggested_questions_after_answer:
      enabled: false
    text_to_speech:
      enabled: false
      language: ''
      voice: ''
  graph:
    edges:
    - data:
        isInIteration: false
        sourceType: start
        targetType: code
      id: 1732083938374-source-1732083953925-target
      source: '1732083938374'
      sourceHandle: source
      target: '1732083953925'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: tool
      id: 1732083953925-source-1751262651290-target
      source: '1732083953925'
      sourceHandle: source
      target: '1751262651290'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: tool
        targetType: answer
      id: 1751262651290-source-1751262693650-target
      source: '1751262651290'
      sourceHandle: source
      target: '1751262693650'
      targetHandle: target
      type: custom
      zIndex: 0
    nodes:
    - data:
        desc: ''
        selected: false
        title: 开始
        type: start
        variables: []
      height: 54
      id: '1732083938374'
      position:
        x: 30
        y: 252.5
      positionAbsolute:
        x: 30
        y: 252.5
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "from pathlib import Path\nPath.home = lambda: Path(\"/dependencies/home\"\
          )\n\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport io\nimport\
          \ base64\n\ndef generate_base64_plot():\n    # 数据准备\n    x = np.linspace(0,\
          \ 10, 100)\n    y = np.sin(x)\n    \n    # 创建图形\n    plt.figure(figsize=(8,\
          \ 6))  # 设置画布大小为 800x600 像素\n    plt.plot(x, y, label='Sine Wave', color='blue',\
          \ linewidth=2)\n    \n    # 添加标题和标签\n    plt.title('Sine Wave Example',\
          \ fontsize=16)\n    plt.xlabel('X-axis', fontsize=12)\n    plt.ylabel('Y-axis',\
          \ fontsize=12)\n    \n    # 添加网格和图例\n    plt.grid(True, linestyle='--',\
          \ alpha=0.6)\n    plt.legend(fontsize=12)\n    \n    # 使用内存缓冲区保存图片为Base64字符串\n\
          \    buffer = io.BytesIO()\n    plt.savefig(buffer, format='png', dpi=100)\
          \  # 使用 100 DPI 保存，确保像素为 800x600\n    buffer.seek(0)  # 将缓冲区指针回到起点\n   \
          \ base64_str = base64.b64encode(buffer.read()).decode('utf-8')\n    buffer.close()\n\
          \    plt.close()  # 关闭绘图对象，释放资源\n    \n    return base64_str\n\n\ndef main():\n\
          \    base64_image = generate_base64_plot()\n    return {\"result\": base64_image}\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 代码执行
        type: code
        variables: []
      height: 54
      id: '1732083953925'
      position:
        x: 334
        y: 252.5
      positionAbsolute:
        x: 334
        y: 252.5
      selected: true
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Base64 encoded image string, default convert to PNG, support PNG
              ("data:image/png;base64" prefix) and JPG ("data:image/jpeg;base64" prefix)
            ja_JP: Base64 encoded image string, default convert to PNG, support PNG
              ("data:image/png;base64" prefix) and JPG ("data:image/jpeg;base64" prefix)
            pt_BR: Base64 encoded image string, default convert to PNG, support PNG
              ("data:image/png;base64" prefix) and JPG ("data:image/jpeg;base64" prefix)
            zh_Hans: Base64 编码的图片字符串，默认转为PNG格式，支持PNG格式（data:image/png;base64开头）及JPG格式（data:image/jpeg;base64开头）
          label:
            en_US: Base64 encoded Text
            ja_JP: Base64 encoded Text
            pt_BR: Base64 encoded Text
            zh_Hans: 已 Base64 编码的图片字符串
          llm_description: A tool for decoding Base64-encoded text to image file
          max: null
          min: null
          name: encoded_text
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Filename of the output file
            ja_JP: Filename of the output file
            pt_BR: Filename of the output file
            zh_Hans: 输出文件名
          label:
            en_US: Filename of the output file
            ja_JP: Filename of the output file
            pt_BR: Filename of the output file
            zh_Hans: 输出文件名
          llm_description: ''
          max: null
          min: null
          name: output_filename
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        params:
          encoded_text: ''
          output_filename: ''
        provider_id: bowenliang123/base64_codec/base64_codec
        provider_name: bowenliang123/base64_codec/base64_codec
        provider_type: builtin
        selected: false
        title: Base64 文本 转 图片
        tool_configurations: {}
        tool_description: 将 Base64 编码文本转为 图片文件
        tool_label: Base64 文本 转 图片
        tool_name: base64_image_decoder
        tool_parameters:
          encoded_text:
            type: mixed
            value: '{{#1732083953925.result#}}'
          output_filename:
            type: mixed
            value: pic
        type: tool
      height: 54
      id: '1751262651290'
      position:
        x: 638
        y: 252.5
      positionAbsolute:
        x: 638
        y: 252.5
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        answer: '图片：


          {{#1751262651290.files#}}'
        desc: ''
        selected: false
        title: 直接回复 2
        type: answer
        variables: []
      height: 105
      id: '1751262693650'
      position:
        x: 942
        y: 252.5
      positionAbsolute:
        x: 942
        y: 252.5
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    viewport:
      x: 368
      y: 135.99999999999994
      zoom: 0.7
